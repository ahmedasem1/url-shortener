name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Tests
        run: go test -v ./...

  docker-build:
    name: Build & Push Docker Image
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/url-shortener:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/url-shortener:latest

  # deploy:
  #   name: Deploy to Kubernetes
  #   needs: docker-build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Set up Kubeconfig
  #       run: |
  #         echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode | tr -d '\r' > kubeconfig.yaml
  #         export KUBECONFIG=$(pwd)/kubeconfig.yaml
  #         kubectl cluster-info || exit 1

  #     - name: Deploy to Kubernetes
  #       run: |
  #         kubectl apply --validate=false -f k8s/
  #         kubectl rollout status deployment/url-shortener

